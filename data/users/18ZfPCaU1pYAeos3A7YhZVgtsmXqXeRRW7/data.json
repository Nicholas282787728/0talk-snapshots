{
	"next_topic_id": 2,
	"topic": [
		{
			"topic_id": 1,
			"title": "Hunting down central nodes and super-nodes (and other problems about ZeroNet…)",
			"body": "(This post is a translation of my own thread on zerotalk FR: http://127.0.0.1:43110/1Vp5LH4wegCaqeB72yMw2jgNdVm4aR7ET/?Topic:1_18ZfPCaU1pYAeos3A7YhZVgtsmXqXeRRW7/La+chasse+aux+n+uds+centraux+et+super+nodes+et+autres+probl+mes+de+0net )\n# Hello everyone,\n \nWhen I heard about zeronet for the first time, I thought that it would just be another toy-project, always broken and that it wouldn't make a difference. I didn't think it would change my mind about IPFS being the best decentralized network for making websites.\n\nBut I quickly realized it was the exact opposite. A software of this kind (foss, p2p, in early development, etc.) has never been so easy to use. I just run the .sh and everything works perfectly. Absolutely unbelievable. More simple than twister and much much more simple than launching a personal pod on disapora (I believe rudy developpers are comfortable with that, but me really, really not). And it doesn't just works, it has real services and possible uses, right now! (mail, blog, textboard, chat, wiki, etc) And every single aspect of zeronet is simple and very convenient to use. Absolutely incredible. My mind was blown.\n\nAnd on top of that, it seems that the project did everything right. Entirely decentralized, p2p, free with a viral licence (yes, it really matters to me), it's not yet another blockchain, etc. Everything right.\n\nSo, I couldn't stop asking myself \"What's the con? What's the con?\" It has to have some flaws. It can't be perfect. And it took me times to identifies some of these flaws. After learning a little bit about how zeronet works, I realized that zeronet work indeed perfectly well − which is a good thing, we want stuff that works, not just white papers and hypothesis −, but at the cost of not being 100% p2p.\n\nI'm making this thread to share with you a list of everything wrong with 0net according to me. And other stuff that could be improved. I made the choice to make a thread here and not a blog post because I'm expecting some feedbacks and I'd like to let you improve that list if you have anything to add. (and also because more people will be able to see it here :P ), I may copy paste this in a zeroblog later…\n\n\n\n## 1) Trackers\n\nOne of the main technology used by zeronet is the bittorrent protocol (actually not. It's just a very similar protocol but still). And you can't talk about bittorrent without talking about DHT ! But no… Let's use trackers instead. If the trackers are shut down, the whole networks falls appart, great.\nIt isn't worse that syncthing who use a single central node for discovery run by the dev team. But it's still not very great.\n\nIt seems to be a very well known point,  so I'm not going to develop any further.\n\n(See update on this issue at the end)\n\n\n\n## 2) The .bit resolution\n\nNamecoin is great, isn't it ? Being able to create domains without the help of any central authority, being able to resolve name by ourself without any external help. Unless the resolution is made by a someone else that I have to \"trust\", like zeroname for instance.\n\nZeroname is completely against the main benefits of namecoin. Yes, blockchains suck. But if you want to make things centralized, why use namecoin in the first place? Stop pretending to make thing decentralized with namecoin if it isn't even remotely decentralized.\n\nSo yes, there is a plugin, the cost of that plugin is to have a local blockchain, etc. But who care? What's important how thing works out of the box. And out of the box, things are centralized.\n\nIf you think that the blockchain suck − and I can only agree −, then you must find another solution (maybe this: https://blockstack.org/docs/light-clients I don't know it well enough to tell if it's any good). In any case, do not try to hide a blockchain behind a centralized proxy, it's pointless and misleading. Better make things explicitly centralized, just like zeroid (more on this later).\n\n\n\n## 3) Zeromail\n\nZeromail, the decentralized mail! Or… Maybe not that much? Okay, okay. The data is stored in a p2p database, completely decentralized, end-to-end encrypted and only readable by the receiver. No problem. The problem is that zeromail.bit is a website. A decentralized, but a website anyway. With an unique publisher, owner of a private key, and only person able to modify the site. For a website it's perfectly good, that's exactly how a website should works. But for email, that's not great.\n\nThe principle of an email is that alice@zeromail.bit is able to send a mail to bob@swagmail.bit. And this is not possible to do that with zeromail! We can clone zeromail, but the two instance of zeromail will never be able to communicate with each other. Zeromail is the only and exclusif provider and that very unfortunate. This is not email, this is just encrypted PM on one and only one website.\n\nZeromail should work just like the newsfeed (Which is one of my favorite things about zeronet). The newsfeed can get feed from any zerosite. You should be able to receive mail from ANY zeromail provider.\n\nIt seems difficult to implement at first. But maybe not that difficult. When Alice send a message to bob, the message should be registered into the swagmail.bit database not on zeromail.bit (Alice shouldn't have to actually visit swagmail.bit to do that or even leave zeromail.bit, the UI should simply allow to do that) then bod only have to listen to what's happen on swagmail.bit by visiting the site or using the newsfeed. THIS would looks like email.\n\n\n\n## 4) Zeroid\n\nProbably my biggest deception. To begin, why only one central ID provider? Why only one service recognized by default in the official and cloned-from-official zerosites? Why only one Id per key? And/or why not making the multi-key management easier?\n\nAn id should looks like toto@site.bit, site.bit being absolutely any zerosite. That's how openid works on the clearweb, anybody can make his own openid service.\n\nAnd all openid services are accepted, BY DEFAULT, even if we make a new openid service only for one personal ID, it works everywhere where openid is accepted. It's not because zerosite are decentralized that we can throw away the self-host principles. The zeroid is only managed by the zeronet team, it can be changed anytime, without notice and there is no reason to trust the only possessor of the private key. There are alternatives likes zeroverse, but if it's refused by default, it's completely pointless!\n\nZeronet really decided to make the multi-user very hard. I don't know why. Either we only have one zeroid, or we have to change user and in order to do that configure the client in open-proxy mode, and then we have to re-enter our private key EVERY TIME. There is no simpler way to do that? Switching between zeroid1 and zeroid2 should be as easy as switching between zeroid, zeroverse and \"unique to site\" id.\n\nAnd we didn't enven started with the worse thing about zeroid. It has a real central node. Written in PHP. The source code is free, but that doesn't matter. It's a remote and central node. It shoudn't exist. It's against the zeronet principle. It means that the ID system which is a very critical aspect of zeronet used by almost every zerosite is managed from a central node by a single team. And there is no way to use an alternative provider since it's not accepted by default. (I can't post here with a zeroverse id for instance). Zeroid is a single point of failure that could compromise everything. Without that service, we can't register new ID and without ID we can't do anything on any zerosite ! That's absolutely terrible !\n\n\n\n## 5) p2p or not p2p?\n\nThat last point poses a big problem. If a zeroid has a central node, then how can we tell if a zeroside is 100% p2p or has a central node? If we visit a zeroid, even with crossdomain forbidden by uMatrix, it still can use a central node. It means that the whole zeronet infrastructure can allow that.\n\nHow can we tell if it's the case? How can we block that?\n\nNevertheless, I'm very interested in the project. None of those point is impossible to solve. And zeronet is one of the most advanced project in this field, shoulder to shoulder with IPFS. I wish that this project will be successful. Now, if you have any critic about the project or my analysis that you want to share. You can do so in the thread bellow.\n\n\n-------------------------------------------\nUpdate:\n1)\nAbout the first issue, it seems like the team has taken this into account:\nhttps://github.com/HelloZeroNet/ZeroNet/issues/57\n\n2)\nAbout the second issue, the \"solution\" ( https://github.com/HelloZeroNet/ZeroNet/issues/407 ) is, again, that famous plugin. But a plugin is not a solution. Only things that work out of the box matters. It doesn't matter if I or a single person get a solution. It matters if everyone or at least a vast majority benefit from it.\nA block-chain isn't a great solution, I get that it can't the default behavior, we should find another solution. A DHT or maybe giving up convenient name like Tor did with his hidden services in .onion.\nI don't have a miracle solution, but a plugin isn't one and this is still an issue that need to be addressed.",
			"added": 1459731173
		}
	],
	"topic_vote": {},
	"next_comment_id": 2,
	"comment": {
		"1_18ZfPCaU1pYAeos3A7YhZVgtsmXqXeRRW7": [
			{
				"comment_id": 1,
				"body": "@nofish, your solution is basically: \"You just have to archive the source code of the site\", but what if nobody did ?\nWhat if I didn't make any symlink and the site do get changed ? The original version of the site is lost and now it's too late to make an archive.\n\nThat's one of the big difference between ipfs and zeronet. Even if storing data in a \"permanent web\" also have a lot of defaults…",
				"added": 1459990977
			}
		]
	},
	"comment_vote": {
		"39_17n5jg4bBEoWodXDf8L4Y2u88ShagS272Y": 1
	}
}